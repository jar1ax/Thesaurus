<?php

namespace app\models;

use phpDocumentor\Reflection\File;
use Yii;
use yii\base\Model;
use yii\validators\ImageValidator;
use yii\web\UploadedFile;
use app\models\ImageUpload;
/**
 * This is the model class for table "books".
 *
 * @property int $id
 * @property string $book_name
 * @property string $author
 * @property ImageValidator $image
 */
class Books extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'books';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['book_name', 'author', 'description'], 'required'],
            [['book_name'], 'string', 'max' => 30],
            [['author'], 'string', 'max' => 40],
            [['description'], 'string', 'max' => 1000],
            [['date'], 'date'],
            //[['author_id'], 'int'],

//          [['image'], 'file', 'skipOnEmpty' => true, 'extensions' => 'png, jpg, jpeg','maxSize'=>1024*1024*2]
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'book_name' => 'Название Книги',
            'author' => 'Автор',
            'image' => 'Картинка',
            'description'=> 'Описание',
            'date'=>'Дата публикации',
            //'author_id'=>'ID Автора'
        ];
    }
    public function saveImage($filename)
    {
        $this->image= $filename;
        $this->save(false);
    }

    public function deleteImage()
    {
        $ImageUploadModel = new ImageUpload();
        $ImageUploadModel->deleteCurrentImage($this->image);
    }

    public function beforeDelete()
    {
        $this->deleteImage();
        return parent::beforeDelete(); // TODO: Change the autogenerated stub

    }
    public function getImage()
    {
//        if ($this->image)
//        {
//            return 'uploads/'
//        }
        return ($this->image) ? 'uploads/'. $this->image : 'no-image.jpg';

    }

}

